name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  POSTGRES_USER: 'testuser'
  POSTGRES_PASSWORD: 'testpassword'
  POSTGRES_DB: 'simple'
  POSTGRES_HOST: 'localhost'

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
  
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | POETRY_VERSION=1.8.2 python3 -

      - name: Install dependencies
        run: poetry install

      - name: Setup DB service
        env:
          DB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          DB_USER: ${{ env.POSTGRES_USER }}
          DB_HOST: ${{ env.POSTGRES_HOST }}
          DB_NAME: ${{ env.POSTGRES_DB }}
        run: |
          poetry run python3 manage.py migrate
          sudo apt-get update
          sudo apt install -y postgresql-client
          PGPASSWORD=$DB_PASSWORD psql -h $POSTGRES_HOST -U $POSTGRES_USER -d $POSTGRES_DB -a -f infra/init_user_table.sql

      - name: Run unit tests
        env:
          DB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          DB_USER: ${{ env.POSTGRES_USER }}
          DB_HOST: ${{ env.POSTGRES_HOST }}
          DB_NAME: ${{ env.POSTGRES_DB }}
        run: |
          poetry run python3 manage.py test
    
      - name: Build Docker image
        run: docker build -t simple-app:local -f infra/Dockerfile .
  
      - name: Run custom integration tests
        env:
          DB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          DB_USER: ${{ env.POSTGRES_USER }}
          DB_HOST: ${{ env.POSTGRES_HOST }}
          DB_NAME: ${{ env.POSTGRES_DB }}
        run: |
          docker run --network ${{ job.services.postgres.network }} -d --name simple-app -p 8000:8000 -e DB_HOST=postgres simple-app:local
          docker run --network ${{ job.services.postgres.network }} -v $PWD/integration-tests:/integration-tests \
          -e WEBAPP_HOST=simple-app python:3.9-slim-buster \
          sh -c "pip3 install requests && python3 /integration-tests/response-check.py"
    
      - name: Push docker image to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "Logging in to Docker Hub and pushing image"
          # echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          # docker tag simple-app:local "${{ secrets.DOCKER_USERNAME }}/simple-app:${{ github.sha }}"
          # docker push "${{ secrets.DOCKER_USERNAME }}/simple-app:${{ github.sha }}"
