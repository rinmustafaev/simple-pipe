version: '3.8'

services:
  db:
    image: postgres:13.3
    container_name: db
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpassword
      POSTGRES_DB: simple
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init_user_table.sql:/docker-entrypoint-initdb.d/1-init_user_table.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  webapp:
    build: 
      context: ../
      dockerfile: infra/Dockerfile
    restart: always
    environment:
      - DB_HOST=db
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://webapp:8000/api/health"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy

  test:
    image: python:3.9-slim-buster
    container_name: test
    command: sh -c "pip3 install requests && python3 /integration-tests/response-check.py"
    restart: always
    volumes:
      - ../integration-tests:/integration-tests
    environment:
      - WEBAPP_HOST=webapp
    depends_on:
      db:
        condition: service_healthy
      webapp:
        condition: service_healthy
volumes:
  postgres_data: